upstream docker_symfony {
	server	symfony:9000;
}

server {
	listen ${NGINX_PORT} default_server;
	listen [::]:${NGINX_PORT} ipv6only=on default_server;
	#
	server_name ${NGINX_HOST} www.${NGINX_HOST};
	#
	location ~ ^/.well-known/acme-challenge/ {
		root /tmp/acme-challenge;
	}
	#
	#location / {
		#port_in_redirect off;
		#return 301 https://$host$request_uri;
	#}
}

server {
	#listen 443 ssl http2;
	#listen [::]:443 ipv6only=on ssl http2;
	#
	server_name ${NGINX_HOST} www.${NGINX_HOST};
	#
	#ssl_certificate /etc/letsencrypt/live/${NGINX_HOST}/fullchain.pem;
	#ssl_certificate_key /etc/letsencrypt/live/${NGINX_HOST}/privkey.pem;
	#ssl_trusted_certificate /etc/letsencrypt/live/${NGINX_HOST}/chain.pem;
	#ssl_dhparam /etc/letsencrypt/ssl-dhparam.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;	
	
	root /var/www/html/webapp/public;
	index index.php;
	
	location / {
		try_files $uri /index.php$is_args$args;
	}

	# optionally disable falling back to PHP script for the asset directories;
	# nginx will return a 404 error when files are not found instead of passing the
	# request to Symfony (improves performance but Symfony's 404 page is not displayed)
	# location /bundles {
	#     try_files $uri =404;
	# }

	location ~ ^/index\.php(/|$) {
		fastcgi_pass docker_symfony;
		# fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
		fastcgi_split_path_info	^(.+\.php)(/.*)$;
		include	fastcgi_params;

		# optionally set the value of the environment variables used in the application
		# fastcgi_param	APP_ENV prod;
		# fastcgi_param	APP_SECRET <app-secret-id>;
		# fastcgi_param	DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

		# When you are using symlinks to link the document root to the
		# current version of your application, you should pass the real
		# application path instead of the path to the symlink to PHP
		# FPM.
		# Otherwise, PHP's OPcache may not properly detect changes to
		# your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
		# for more information).
		# Caveat: When PHP-FPM is hosted on a different machine from nginx
		#         $realpath_root may not resolve as you expect! In this case try using
		#         $document_root instead.
		fastcgi_param	SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
		fastcgi_param	DOCUMENT_ROOT $realpath_root;
		# Prevents URIs that include the front controller. This will 404:
		# http://domain.tld/index.php/some-path
		# Remove the internal directive to allow URIs like this
		internal;
	}

	# return 404 for all other php files not matching the front controller
	# this prevents access to other php files you don't want to be accessible.
	location ~ \.php$ {
		return 404;
	}
	#
	# deny access to .htaccess vb. files, if Apache's document root
	location ~/\. {
		deny all;     
		log_not_found off;
	}
	#
	location ~ /.well-known {
		allow all;
	}
	#
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}
	#
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}
	#
	access_log off;
	error_log  /var/log/nginx/${NGINX_HOST}.error.log error;
}
